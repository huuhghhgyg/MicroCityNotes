import{_ as e}from"./icon_script_editor-S0ak5iz0.js";import{_ as t,r as i,o as l,c as p,a,b as n,d as o,w as c,e as u}from"./app-BliQTEsv.js";const r={},d=a("h1",{id:"_4-4-grids",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-4-grids"},[a("span",null,"4.4 Grids")])],-1),m=a("strong",null,"Grids",-1),h=a("strong",null,"Project",-1),g=a("img",{src:e,alt:"icon"},null,-1),k=a("strong",null,"ScriptEditor",-1),v=u(`<h2 id="cellular-data-manipulation" tabindex="-1"><a class="header-anchor" href="#cellular-data-manipulation"><span>Cellular Data Manipulation</span></a></h2><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">CreateGrid</span> <span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Int|Float|Double&quot;</span><span class="token punctuation">,</span> XMax<span class="token punctuation">,</span> YMax <span class="token punctuation">[</span><span class="token punctuation">,</span> CellSize <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> xMin <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> yMin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> init <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns a <em>Grid</em> object.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetCellSize</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns the Cellsize value of a <em>Grid</em>.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetGridMaxXY</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns XMax, YMax of a <em>Grid</em>.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">ConvertToGridXY</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> y1 <span class="token punctuation">[</span><span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Converts real coordinates to coordinates in a <em>Grid</em>. Returns X1, Y1, X2, Y2, ... .</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">ShapeToGrid</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> Shape<span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Rasterizes a <em>Shape</em> in a <em>Grid</em>. The cell values will be set according to the covering area and the inputed value.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">ShapeToGrid</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> Shapes<span class="token punctuation">,</span> <span class="token string">&quot;field_name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Rasterizes all <em>Shape</em> objects in a <em>Shapes</em>. The cell values will be set according to the covering area and the values of <em>Shapes</em> field.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetValue</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> X1<span class="token punctuation">,</span> Y1 <span class="token punctuation">[</span><span class="token punctuation">,</span> X2<span class="token punctuation">,</span> Y2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns cells&#39; (specified by <em>Grid</em> coordinates) values: value1, value2, ... .</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetValue</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> value<span class="token punctuation">,</span> X1<span class="token punctuation">,</span> Y1 <span class="token punctuation">[</span><span class="token punctuation">,</span> X2<span class="token punctuation">,</span> Y2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets values for cells specified by <em>Grid</em> coordinates.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetCenterXY</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns the center real coordinate (x, y) of a <em>Grid</em>.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetCenterXY</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> X1<span class="token punctuation">,</span> Y1 <span class="token punctuation">[</span><span class="token punctuation">,</span> X2<span class="token punctuation">,</span> Y2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns the real coordinates of cells&#39; centers: x1, y1, x2, y2, ... .</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetExtent</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns the leftbottom and righttop corner of a <em>Grid</em>&#39;s extent: Lx, By, Rx, Ty.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetExtent</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Returns the leftbottom and righttop corner of a cell&#39;s extent: Lx, By, Rx, Ty.</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetFractalDim</span> <span class="token punctuation">(</span>Grid<span class="token punctuation">,</span> X1<span class="token punctuation">,</span> Y1<span class="token punctuation">,</span> X2<span class="token punctuation">,</span> Y2<span class="token punctuation">,</span> fold <span class="token punctuation">[</span><span class="token punctuation">,</span> MultiFractalQ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Calculates fractal dimension of the specified area in a <em>Grid</em>. Returns dimension, RSQ of linear regression, and the number of boxes in every fold.</p>`,27);function b(f,_){const s=i("RouteLink");return l(),p("div",null,[d,a("p",null,[m,n(" in MicroCity have simple structure ("),o(s,{to:"/en/docs/3.3_raster_grids.html"},{default:c(()=>[n("3.3")]),_:1}),n(') but efficient time and space utilization if applying algorithms on them. Sample codes for this chapter can be found in the "grid_samples" folder of the '),h,n(" Tab in "),g,k,n(".")]),v])}const x=t(r,[["render",b],["__file","4.4_grids.html.vue"]]),S=JSON.parse('{"path":"/en/docs/4.4_grids.html","title":"4.4 Grids","lang":"en-US","frontmatter":{"prev":"./4.3_shapes_and_tables.md","next":"./4.5_3d_scenes.md","description":"4.4 Grids Grids in MicroCity have simple structure () but efficient time and space utilization if applying algorithms on them. Sample codes for this chapter can be found in the ...","head":[["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/en/docs/4.4_grids.html"}],["meta",{"property":"og:site_name","content":"MicroCity Notes"}],["meta",{"property":"og:title","content":"4.4 Grids"}],["meta",{"property":"og:description","content":"4.4 Grids Grids in MicroCity have simple structure () but efficient time and space utilization if applying algorithms on them. Sample codes for this chapter can be found in the ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-25T03:41:16.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-25T03:41:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.4 Grids\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T03:41:16.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Cellular Data Manipulation","slug":"cellular-data-manipulation","link":"#cellular-data-manipulation","children":[]}],"git":{"updatedTime":1700883676000,"contributors":[{"name":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":1}]},"filePathRelative":"en/docs/4.4_grids.md","autoDesc":true,"excerpt":"\\n<p><strong>Grids</strong> in MicroCity have simple structure (<a href=\\"/MicroCityNotes/en/docs/3.3_raster_grids.html\\" target=\\"_blank\\">3.3</a>) but efficient time and space utilization if applying algorithms on them. Sample codes for this chapter can be found in the \\"grid_samples\\" folder of the <strong>Project</strong> Tab in <strong>ScriptEditor</strong>.</p>"}');export{x as comp,S as data};
