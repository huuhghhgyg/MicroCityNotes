import{_ as p,c as e,e as s,f as t,o,r as l}from"./app-TX6nqiCH.js";const c="/MicroCityNotes/assets/exp-bisect-background-CXR2HMGG.svg",i="/MicroCityNotes/assets/exp-bisect-lt-CveOTmdW.svg",u="/MicroCityNotes/assets/exp-bisect-gt-D4pXJcdz.svg",r="/MicroCityNotes/assets/exp-bisect-steps-5MEs9mAx.svg",k={};function d(b,n){const a=l("Mermaid");return o(),e("div",null,[n[0]||(n[0]=s('<h1 id="指数拓展的二分搜索" tabindex="-1"><a class="header-anchor" href="#指数拓展的二分搜索"><span>指数拓展的二分搜索</span></a></h1><p>二分法搜索是一种非常高效的搜索算法，它可以在 $O(\\log n)$ 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。</p><p>然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。</p><p><img src="'+c+'" alt="背景"></p><h2 id="基本思想" tabindex="-1"><a class="header-anchor" href="#基本思想"><span>基本思想</span></a></h2><p>指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则直接使用二分搜索；如果目标值不在这个范围内，我们就不断地将范围扩大一倍，直到目标值在这个范围内，然后在最后一个增长的区间内使用二分搜索。</p>',6)),t(a,{id:"mermaid-18",code:"eJxLy8kvT85ILCpRCHHhUgCC4BIgJ/rpnoany7tjFXR17RQ88zKBAh1zgQJPe6Y97W96NnVDLFgtSAasxDk/tyCxKNU5IzU5O/rZ+ikv9jW/2Lfz+dSepw17IEqRVYC1uFYUJOalVL+c0/BiWeOzzpVPN06FaLGv5QLrgCgAqa15NmN9jUJoQUpiSapTfmleSnH0s9lbnk3bgGYHsgokOzCMezphWY2CU2ZeYlFlcGpiUXJG9JNdPU872p7NX/qsc18sRD2yPMSwvJToF/unPJ097/nuyc/mzYnlAgBAWIhl"}),n[1]||(n[1]=s('<h3 id="范围判别" tabindex="-1"><a class="header-anchor" href="#范围判别"><span>范围判别</span></a></h3><p>假设我们可以通过某个函数判断目标值是否在给定的范围内。在这里，我们将这个判断函数定义为 <code>compare(x, obj)</code>，用于模拟判断结果。<code>obj</code> 为目标值，<code>x</code> 为试验值：</p><ul><li>如果 <code>obj</code> 在 <code>x</code> 的左侧，则返回 -1；</li><li>如果 <code>obj</code> 在 <code>x</code> 的右侧，则返回 1；</li><li>如果 <code>obj</code> 等于 <code>x</code>，则返回 0。</li></ul><p>显然，如果 $lb$ 和 $ub$ 分别是搜索范围的下界和上界，如果它们同时为-1 或 1，则说明目标值不在这个范围内（对应 $lb$ 和 $ub$ 同时小于或大于目标）。</p><p>范围过小，<code>compare(x, obj)</code> 返回 -1 <img src="'+i+'" alt="范围过小"></p><p>范围过大，<code>compare(x, obj)</code> 返回 1 <img src="'+u+'" alt="范围过大"></p><p>受到二分法的思路启发，如果我们以指数级别扩展范围，那么我们也可以很快地找到包含目标值的范围。范围扩展的步骤可以用下面这张图描述</p><p><img src="'+r+`" alt="步骤"></p><p>到达这一步，我们就可以使用二分搜索来找到目标值了。</p><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h2><iframe src="https://mcw.zhhuu.top/#/H4sIAAAAAAAACu2WW2sTQRTH+xzIdzgEShO6G3djk4J0+0kKZTeZtFsnu2F2ButbsWqrjRfsBa1VRAr6YkxBofb2abKb9MmvILP3XGrpQwVhfg+bzcyZc/5nz9mZrdo1NHHLKIqiVCoz/FedLSvpX87dSkmdUGdmSzMldXa2UppQS2VV5etuWxiHOVQnE4pCdWLoGK84V9hdN/+fIsvgbn5wv2y5rT1vt+O9aGczTWJaNF8AkGXwjp9cvjv03l70Dk+yGWxXdQy2sQIalMrlStm36e187Z689H5u9b/v9vYf9963vU8b7tpZNpPNcP/t/e6vZ973nf7Furtx7u12spk6s6rUtC2o2o2mTlB+VeJuC9kMAIBZh1WY8+PQZWQBQZQRC2Q1mEbYQb7J/IhJyiIaUgBZtWzGv/h6vNYGz3Rr2z3icrsnLXfzqff6oPfjc0oYWm0uGqalk4eLDtJJdTmPDQmYIUGToKrpmLYVqpVl6Lcveufty9O3/fah++qRnyKfwgZo/GKTWDzjQ8wfCkdif6Cl7m0CSjAfRwkepHu0drn+dUBa9FT9kH6J4jTGpRDq5uiOgwjNMwPmuVAJcszQclAsconFIuSgwRwKBgLDXFpCBOiybgEObXDa1YNlEyO+TOYZz6dSqdmJVSKxYdZAgzw2YJprgjtQGmdGkMMwBS3ulIZZS/dKhFmPTTWQVb8rBi3igjTM2uhM0PQOJaa1VKzbpKHTfM5BlC+hNkzWcxJfWBgKG/ZiEvqqyOzmkdm1kUedGQTp94cMrVTQgT/hGzJQAwmCJglfpMg8acLNQ2/vGzbcN63IaGwCYbnuwWRNgslaTooLyP3z+iUjLByJUgwq71CdokW/YsNLR81Y2owNmAXXoD0Tn1qyMN2fY3PBhjZZlxYo47+56AmlCzK0rSQTZj2JOQfKmOaINoRpyIcvz1Chx0pyO0+ZEQRzNzu+qkFFYWPGwefHBo82KPmmwfFQcDwYPN1lyd21FU2M/lLP0Z7sd9b9Myi9kaf6+4o9MDkRgvXRLpredySom5aOF/mi4M4XNno4FKJjcyoQ0Dvd9j4e/D7bn5JiV1MLtHv8vHu81dttBTOjzgv/+Pxv6s6tf9Fc8/3HGf7+uyu+/wQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgeBm/AE/gTYoACgAAA==" width="100%" height="600" style="border-radius:8px;"></iframe><p>🔗 <a href="https://microcity.github.io/#snzd6a" target="_blank" rel="noopener noreferrer">在 MicroCityWeb 中打开</a></p><p>源代码：</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token comment">-- 初始化数据</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">-- 清除显示</span></span>
<span class="line"><span class="token keyword">local</span> obj <span class="token operator">=</span> <span class="token number">25565</span>  <span class="token comment">-- 用于测试的目标值</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 定义比较函数</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">compare</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> x <span class="token operator">&lt;</span> obj <span class="token keyword">then</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line">    <span class="token keyword">elseif</span> x <span class="token operator">&gt;</span> obj <span class="token keyword">then</span> <span class="token keyword">return</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 指数拓展的二分搜索</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">exp_binary_search</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> ub<span class="token punctuation">,</span> precision<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 设置默认参数</span></span>
<span class="line">    lb <span class="token operator">=</span> lb <span class="token keyword">or</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line">    ub <span class="token operator">=</span> ub <span class="token keyword">or</span> <span class="token number">1</span></span>
<span class="line">    precision <span class="token operator">=</span> precision <span class="token keyword">or</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 定义局部binary_search函数</span></span>
<span class="line">    <span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> ub<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">assert</span><span class="token punctuation">(</span>ub <span class="token operator">&gt;=</span> lb<span class="token punctuation">,</span> <span class="token string">&quot;ub=&quot;</span> <span class="token operator">..</span> ub <span class="token operator">..</span> <span class="token string">&quot; must be bigger than lb=&quot;</span> <span class="token operator">..</span> lb<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">while</span> ub <span class="token operator">-</span> lb <span class="token operator">&gt;</span> precision <span class="token keyword">do</span></span>
<span class="line">            <span class="token keyword">local</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>lb <span class="token operator">+</span> ub<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span></span>
<span class="line">            <span class="token keyword">local</span> result <span class="token operator">=</span> <span class="token function">compare</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> result <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">then</span></span>
<span class="line">                lb <span class="token operator">=</span> mid</span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;set lb to %f&quot;</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">elseif</span> result <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">then</span></span>
<span class="line">                ub <span class="token operator">=</span> mid</span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;set ub to %f&quot;</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">else</span></span>
<span class="line">                <span class="token keyword">break</span></span>
<span class="line">            <span class="token keyword">end</span></span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span>lb <span class="token operator">+</span> ub<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub</span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 判断lb和ub</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;compare: %d, %d&quot;</span><span class="token punctuation">,</span> <span class="token function">compare</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">compare</span><span class="token punctuation">(</span>ub<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> state_lb <span class="token operator">=</span> <span class="token function">compare</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> state_ub <span class="token operator">=</span> <span class="token function">compare</span><span class="token punctuation">(</span>ub<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">while</span> state_lb <span class="token operator">==</span> state_ub <span class="token keyword">do</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;lb=%f,\\tub=%f&quot;</span><span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">-- 指数拓展</span></span>
<span class="line">        <span class="token keyword">if</span> state_lb <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">then</span></span>
<span class="line">            ub <span class="token operator">=</span> ub <span class="token operator">+</span> <span class="token punctuation">(</span>ub <span class="token operator">-</span> lb<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;将ub拓展到%f&quot;</span><span class="token punctuation">,</span> ub<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elseif</span> state_lb <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">then</span></span>
<span class="line">            lb <span class="token operator">=</span> lb <span class="token operator">-</span> <span class="token punctuation">(</span>ub <span class="token operator">-</span> lb<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;将lb拓展到%f&quot;</span><span class="token punctuation">,</span> lb<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">        </span>
<span class="line">        state_lb <span class="token operator">=</span> <span class="token function">compare</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">        state_ub <span class="token operator">=</span> <span class="token function">compare</span><span class="token punctuation">(</span>ub<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">-- 调用二分搜索</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> ub<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用函数</span></span>
<span class="line"><span class="token keyword">local</span> result<span class="token punctuation">,</span> final_lb<span class="token punctuation">,</span> final_ub <span class="token operator">=</span> <span class="token function">exp_binary_search</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;搜索结果：&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> <span class="token string">&#39;\\t上下界：&#39;</span><span class="token punctuation">,</span> final_lb<span class="token punctuation">,</span> final_ub<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14))])}const v=p(k,[["render",d],["__file","exp-extended-bisect-search.html.vue"]]),g=JSON.parse('{"path":"/notes/gallery/exp-extended-bisect-search.html","title":"指数拓展的二分搜索","lang":"zh-CN","frontmatter":{"description":"指数拓展的二分搜索 二分法搜索是一种非常高效的搜索算法，它可以在 $O(\\\\log n)$ 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。 然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。 背景 基本思想 指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则...","head":[["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/notes/gallery/exp-extended-bisect-search.html"}],["meta",{"property":"og:site_name","content":"MicroCity笔记"}],["meta",{"property":"og:title","content":"指数拓展的二分搜索"}],["meta",{"property":"og:description","content":"指数拓展的二分搜索 二分法搜索是一种非常高效的搜索算法，它可以在 $O(\\\\log n)$ 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。 然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。 背景 基本思想 指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-05T03:44:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-05T03:44:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"指数拓展的二分搜索\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-05T03:44:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本思想","slug":"基本思想","link":"#基本思想","children":[{"level":3,"title":"范围判别","slug":"范围判别","link":"#范围判别","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"git":{"updatedTime":1733370264000,"contributors":[{"name":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":3,"url":"https://github.com/huuhghhgyg"}]},"filePathRelative":"notes/gallery/exp-extended-bisect-search.md","autoDesc":true,"excerpt":"\\n<p>二分法搜索是一种非常高效的搜索算法，它可以在 $O(\\\\log n)$ 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。</p>\\n<p>然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。</p>\\n<p></p>\\n<h2>基本思想</h2>\\n<p>指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则直接使用二分搜索；如果目标值不在这个范围内，我们就不断地将范围扩大一倍，直到目标值在这个范围内，然后在最后一个增长的区间内使用二分搜索。</p>\\n<h3>范围判别</h3>\\n<p>假设我们可以通过某个函数判断目标值是否在给定的范围内。在这里，我们将这个判断函数定义为 <code>compare(x, obj)</code>，用于模拟判断结果。<code>obj</code> 为目标值，<code>x</code> 为试验值：</p>"}');export{v as comp,g as data};
