import{_ as s,r as t,o,c,a,b as n,d as r,e as p}from"./app-74QKXaVC.js";const u={},l=p(`<h1 id="_4-1-si-概述" tabindex="-1"><a class="header-anchor" href="#_4-1-si-概述"><span>4.1 SI 概述</span></a></h1><h2 id="lua-引擎" tabindex="-1"><a class="header-anchor" href="#lua-引擎"><span>Lua 引擎</span></a></h2><p>MicroCity Web 使用 <a href="https://www.lua.org/manual/5.4/manual.html" target="_blank">Lua 5.4</a> 作为其脚本语言。内置许多有用的函数，不仅可以操纵数据，还能解决数学模型并运行仿真。您应该阅读以下章节以获取更多信息。</p><h2 id="约定" tabindex="-1"><a class="header-anchor" href="#约定"><span>约定</span></a></h2><p>Lua 中有三种主要数据类型可以作为参数传递给嵌入函数，即数字（Number）、字符串（String）和对象（Object）。对象类型包括内置的 Lua 对象，如表（Table）、函数（Function）和线程（Thread）等，还包括 MicroCity Web 对象，比如场景（Scene）。如果 v 是一个对象，v:func(args) 的调用与 v.func(v, args) 等效，只是 v 只被求值一次。在定义嵌入函数时使用一些符号。以下是一个嵌入函数的示例：</p><div class="language-lua" data-ext="lua" data-title="lua"><pre class="language-lua"><code>coroutine<span class="token punctuation">.</span><span class="token function">queue</span><span class="token punctuation">(</span>rt<span class="token punctuation">,</span> f<span class="token operator">|</span>co <span class="token punctuation">[</span><span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> ···<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>在这种情况下，参数之间的 &#39;|&#39; 符号表示&quot;或&quot;。方括号 &#39;[&#39; 和 &#39;]&#39; 表示可选参数。参数列表末尾的三个点 &#39;...&#39; 表示可以跟随任意数量的参数。</p><h2 id="编码" tabindex="-1"><a class="header-anchor" href="#编码"><span>编码</span></a></h2><p>MicroCity Web 中的任何文件默认编码为 UTF-8。Lua 可以使用 utf8 库处理这些文件。</p>`,9),i={href:"https://github.com/huuhghhgyg/MicroCityNotes/issues/new",target:"_blank",rel:"noopener noreferrer"},h=a("strong",null,"反馈",-1);function d(_,f){const e=t("ExternalLinkIcon");return o(),c("div",null,[l,a("blockquote",null,[a("p",null,[n("本文使用ChatGPT翻译，如有遗漏请"),a("a",i,[h,r(e)]),n("。")])])])}const g=s(u,[["render",d],["__file","4.1_si_overview.html.vue"]]);export{g as default};
