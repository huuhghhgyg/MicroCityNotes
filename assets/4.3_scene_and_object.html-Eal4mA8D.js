import{_ as t,r as e,o as p,c as o,a as n,b as a,d as l,e as c}from"./app-74QKXaVC.js";const i={},u=c(`<h1 id="_4-3-场景和对象" tabindex="-1"><a class="header-anchor" href="#_4-3-场景和对象"><span>4.3 场景和对象</span></a></h1><p>场景库被设计用来控制场景画布以及其中的对象。</p><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span><a id="scene">场景</a></span></a></h2><p>这部分功能包括设置场景、添加查找对象和坐标转换工具。</p><p><a id="scene.setenv"> scene.setenv (opttab) </a></p><p>根据<code>opttab</code>中的选项设置场景。无返回值。选项列表:</p><ul><li>clear: 如果设置为 true，则清除场景中的所有对象。默认为 false。这可在脚本运行中使用，因为脚本开始运行时场景会被自动清理。</li><li>camtype: 将相机设置为透视 (&quot;persp&quot;) 或正交 (&quot;ortho&quot;) 投影。默认为 &quot;persp&quot;。</li><li>grid: 在xz平面 (&quot;plane&quot;) 或单位球面上 (&quot;sphere&quot;) 设置参考网格。默认为 &quot;none&quot;。</li><li>bgcolor: 设置背景颜色。可使用颜色字符串如 &quot;black&quot; 或 &quot;#000000&quot;。默认为 &quot;white&quot;。</li><li>rotspeed: 鼠标拖动旋转速度。默认为 1。</li><li>transpeed: 鼠标拖动平移速度。默认为 1。</li><li>near: 相机视锥近平面。默认为 2。</li><li>far: 相机视锥远平面。默认为 3000。</li></ul><p>以下是设置相机投影和背景颜色的示例代码:</p><div class="language-lua" data-ext="lua" data-title="lua"><pre class="language-lua"><code>scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>camtype<span class="token operator">=</span><span class="token string">&#39;ortho&#39;</span><span class="token punctuation">,</span> bgcolor<span class="token operator">=</span><span class="token string">&#39;black&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><a id="scene.addobj"> scene.addobj (type [, opttab]) </a></p><p>将一个特定类型和选项的对象添加到场景的(0, 0, 0)位置。返回这个对象。类型包括:</p><ul><li>&quot;points&quot;: 3D 离散点。使用以下选项: vertices, selectable, color, opacity, hcolor, size。</li><li>&quot;polyline&quot;: 3D 折线。使用以下选项: vertices, selectable, color, opacity, hcolor, size。</li><li>&quot;polygon&quot;: 2D 多边形，位于 xy 平面并朝 z(size) 方向挤压。使用以下选项: vertices, selectable, color, opacity, hcolor, size。</li><li>&quot;mesh&quot;: 网格。使用以下选项: vertices, selectable, color, opacity, hcolor。</li><li>&quot;box&quot;: 具有六个面的盒子。使用以下选项: width, height, length, selectable, color, opacity, hcolor。</li><li>&quot;sphere&quot;: 球体。使用以下选项: radius, segments, selectable, color, opacity, hcolor。</li><li>&quot;label&quot;: 始终朝向摄像机的文本标签。使用以下选项: text, font, selectable, color, opacity, hcolor, size。</li><li>&quot;light&quot;: 始终指向(0, 0, 0)的方向光。使用不透明度选项。</li><li>&quot;.json&quot;: Threejs JSON 文件。使用以下选项: selectable, hcolor。</li><li>&quot;.gltf&quot;: GLTF 文件。使用以下选项: selectable, hcolor。</li><li>&quot;.glb&quot;: GLB 文件。使用以下选项: selectable, hcolor。</li><li>&quot;.geojson&quot;: GeoJSON 文件。使用以下选项: selectable, color, opacity, hcolor。</li></ul><p>opttab 中的选项列表:</p><ul><li>vertices: 一个数组，其中每三个数字代表一个三维点（x，y，z）。对于网格，每三个点组成一个三角形。法线遵循<strong>右手定则</strong>。默认为空。</li><li>width: 以x轴测量的盒子宽度。默认为1。</li><li>height: 以y轴测量的盒子高度。默认为1。</li><li>length: 以z轴测量的盒子长度。默认为1。</li><li>size: 厚度或宽度。默认为1。</li><li>radius: 球体的半径。默认为1。</li><li>segments: 对于球体网格的水平和1/2垂直分段。默认为32。</li><li>selectable: 如果为true，则可以选择该对象。默认为true。</li><li>color: 材质颜色，例如&quot;red&quot;或&quot;#FF0000&quot;。默认为&quot;gray&quot;。</li><li>hcolor: 如果被选中则高亮显示的颜色。默认为&quot;red&quot;。</li><li>opacity: 材质的透明度。默认为1。</li><li>name: 一个字符串，稍后可以被scene.getobj使用。默认为&quot;&quot;。</li><li>text: 标签所使用的文本。默认为&quot;&quot;。</li><li>font: 标签所使用的字体。默认为&quot;Arial&quot;。</li></ul><p>以下是向场景添加对象的一些示例：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>scene.setenv({grid=&#39;plane&#39;})                                                 --设置一个平面网格
scene.addobj(&quot;points&quot;, {vertices={0,0,0, 5,5,5}, size=5})                    --添加两个大小为5的点
scene.addobj(&quot;polyline&quot;, {vertices={0,0,0, -2,3,5, 4,6,7}, color=&#39;blue&#39;})    --添加一个蓝色折线
scene.addobj(&quot;polygon&quot;, {vertices={-1,-1,0, -1,1,0, 1,1,0, 1,-1,0}, size=0}) --添加一个二维多边形
scene.addobj(&quot;label&quot;, {text=&quot;hello&quot;, size=5})                                --添加一个标签
scene.render()                                                               --渲染场景
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a id="scene.getobj"> scene.getobj (name) </a></p><p>遍历场景，并返回第一个匹配名称的对象。相机和选定的对象可用&quot;camera&quot;和&quot;selected&quot;找到。</p><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>scene.tovector<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> scene.tovector (radius, phi, theta) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

从球坐标转换返回 x、y、z。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>scene.topolar<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> scene.topolar (x, y, z) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

从向量返回球坐标：半径、phi、theta。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>scene.render<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> scene.render ([ms]) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

渲染场景并检查浏览器，类似于 <span class="token url">[<span class="token content">os.getready</span>](<span class="token url">4.2_operation_system.md#os.getready</span>)</span>，然后返回结果。可以通过 ms 参数控制渲染之间的间隔时间（毫秒）。

<span class="token title important"><span class="token punctuation">##</span> 对象</span>
这部分函数控制场景中的对象。请注意，调用 obj:func(args) 是 scene.func(obj, args) 的语法糖。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getpos<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getpos () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

返回对象的位置：x、y、z。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setpos<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setpos (x, y, z) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

设置对象的位置：x、y、z。如果对象是正交摄像机，则 z 也用作摄像机的缩放值。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getrot<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getrot () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

返回对象的旋转（弧度）：x、y、z。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setrot<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setrot (x, y, z) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

设置对象的旋转（弧度）：x、y、z。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getscale<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getscale () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

返回对象的缩放：x、y、z。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setscale<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setscale (x, y, z) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

设置对象的缩放：x、y、z。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getchildren<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getchildren () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

获取所有子对象并将它们放入一个表作为返回值。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setchildren<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setchildren (childtab) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

将表 childtab 中的所有对象设置为该对象的子对象。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getparent<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getparent () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

返回对象的父级对象。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setparent<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setparent ([parent]) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

设置对象的父级对象。对象可以没有父对象。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getmat<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getmat () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

获取对象的材质信息表。信息列表：
<span class="token list punctuation">-</span> type：材质类型字符串，比如<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://threejs.org/docs/#api/en/materials/MeshBasicMaterial<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&quot;MeshBasicMaterial&quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>。
<span class="token list punctuation">-</span> map：纹理ID号。
<span class="token list punctuation">-</span> color：颜色字符串，例如&quot;red&quot;、&quot;rgb(250, 0,0)&quot;、&quot;rgb(100%,0%,0%)&quot;、&quot;hsl(0, 100%, 50%)&quot;、&quot;#FF0000&quot;、&quot;#f00&quot;。
<span class="token list punctuation">-</span> opacity：表示材质透明度的数字。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setmat<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setmat (opttab) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

从opttab中设置对象的材质。选项列表：
<span class="token list punctuation">-</span> type：材质类型字符串，比如<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://threejs.org/docs/#api/en/materials/MeshBasicMaterial<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&quot;MeshBasicMaterial&quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>。
<span class="token list punctuation">-</span> map：纹理ID号或图像文件路径或URL，例如&quot;map.jpg&quot;。
<span class="token list punctuation">-</span> color：颜色字符串，例如&quot;red&quot;或&quot;#FF0000&quot;。
<span class="token list punctuation">-</span> opacity：表示材质透明度的数字。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getvertices<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getvertices () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

返回对象的几何体的顶点数组和索引数组（如果有）。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setvertices<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setvertices (vertices [, indices]) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

设置对象的几何体的顶点数组和索引数组（如果有）。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:getdata<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:getdata () <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

返回存储对象的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://threejs.org/docs/#api/en/core/Object3D.userData<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自定义数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>的表格。请参考<span class="token url">[<span class="token content">2.2 Searching for Countries</span>](<span class="token url">2.2_searching_for_countries.md</span>)</span>获取示例代码。

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>obj:setdata<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> obj:setdata (datatab) <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 datatab 中的 (key, value) 写入对象的自定义数据字段中。</p><p><a id="obj:tojson"> obj:tojson (fpath) </a></p><p>将对象写入到指定路径的 Threejs JSON 文件中。</p><p><a id="obj:delete"> obj:delete () </a></p><p>递归删除对象及其所有子对象。</p>`,25),r={href:"https://github.com/huuhghhgyg/MicroCityNotes/issues/new",target:"_blank",rel:"noopener noreferrer"},k=n("strong",null,"反馈",-1);function d(v,g){const s=e("ExternalLinkIcon");return p(),o("div",null,[u,n("blockquote",null,[n("p",null,[a("本文使用ChatGPT翻译，如有遗漏请"),n("a",r,[k,l(s)]),a("。")])])])}const m=t(i,[["render",d],["__file","4.3_scene_and_object.html.vue"]]);export{m as default};
