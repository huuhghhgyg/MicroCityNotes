import{_ as n,o as a,c as s,f as e}from"./app.bb55360d.js";const t={},p=e(`<h1 id="lua语言快速上手" tabindex="-1"><a class="header-anchor" href="#lua语言快速上手" aria-hidden="true">#</a> LUA语言快速上手</h1><p>由于MicroCity采用的脚本语言是LUA，因此在开始使用MicroCity编写脚本之前需要先熟悉LUA的基本用法。</p><h2 id="变量定义" tabindex="-1"><a class="header-anchor" href="#变量定义" aria-hidden="true">#</a> 变量定义</h2><p><strong>⚠ 需要填写</strong></p><h2 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h2><p><strong>⚠ 需要填写</strong></p><h2 id="lua的小特性-集合" tabindex="-1"><a class="header-anchor" href="#lua的小特性-集合" aria-hidden="true">#</a> Lua的小特性：集合</h2><p>虽然Lua里面把它自己的数组称作<code>table</code>，但是我认为这个数据结构更类似于Python的集合或者json，里面可以存储任何东西，不受结构约束。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>collection <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果需要查询数组的长度，只需要在数组名前面添加<code>#</code>即可得到</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">#</span>list <span class="token keyword">do</span>
    <span class="token function">print</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lua的数组（集合）下标从<code>1</code>开始，不同于C类语言的<code>0</code></p>`,12),o=[p];function c(u,l){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","lua.html.vue"]]);export{r as default};
