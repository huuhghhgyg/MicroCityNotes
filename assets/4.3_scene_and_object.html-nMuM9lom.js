import{_ as c,r as e,o as i,c as u,a as n,b as s,d as a,w as o,e as p}from"./app-Gl7DLcIg.js";const r={},d=p(`<h1 id="_4-3-场景和对象" tabindex="-1"><a class="header-anchor" href="#_4-3-场景和对象"><span>4.3 场景和对象</span></a></h1><p>场景库被设计用来控制场景画布以及其中的对象。</p><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span><a id="scene">场景</a></span></a></h2><p>这部分功能包括设置场景、添加查找对象和坐标转换工具。</p><p><a id="scene.setenv"> scene.setenv (opttab) </a></p><p>根据<code>opttab</code>中的选项设置场景。无返回值。选项列表:</p><ul><li>clear: 如果设置为 true，则清除场景中的所有对象。默认为 false。这可在脚本运行中使用，因为脚本开始运行时场景会被自动清理。</li><li>camtype: 将相机设置为透视 (&quot;persp&quot;) 或正交 (&quot;ortho&quot;) 投影。默认为 &quot;persp&quot;。</li><li>grid: 在xz平面 (&quot;plane&quot;) 或单位球面上 (&quot;sphere&quot;) 设置参考网格。默认为 &quot;none&quot;。</li><li>bgcolor: 设置背景颜色。可使用颜色字符串如 &quot;black&quot; 或 &quot;#000000&quot;。默认为 &quot;white&quot;。</li><li>rotspeed: 鼠标拖动旋转速度。默认为 1。</li><li>transpeed: 鼠标拖动平移速度。默认为 1。</li><li>near: 相机视锥近平面。默认为 2。</li><li>far: 相机视锥远平面。默认为 3000。</li></ul><p>以下是设置相机投影和背景颜色的示例代码:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>scene.setenv({camtype=&#39;ortho&#39;, bgcolor=&#39;black&#39;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a id="scene.addobj"> scene.addobj (type [, opttab]) </a></p><p>向场景的（0, 0, 0）位置添加具有特定类型和选项的对象。返回此对象。可用的类型包括：</p><ul><li>&quot;points&quot;：3D 离散点。使用这些选项：顶点、可选择性、颜色、不透明度、高亮颜色、大小。</li><li>&quot;polyline&quot;：3D 折线。使用这些选项：顶点、可选择性、颜色、不透明度、高亮颜色、大小。</li><li>&quot;polygon&quot;：在 xy 平面上并在 z（尺寸）方向上挤出的 2D 多边形。使用这些选项：顶点、可选择性、颜色、不透明度、高亮颜色、大小。</li><li>&quot;mesh&quot;：网格。使用这些选项：顶点、可选择性、颜色、不透明度、高亮颜色。</li><li>&quot;box&quot;：具有六个面的盒子。使用这些选项：宽度、高度、长度、可选择性、颜色、不透明度、高亮颜色。</li><li>&quot;sphere&quot;：球体。使用这些选项：半径、分段、可选择性、颜色、不透明度、高亮颜色。</li><li>&quot;label&quot;：始终朝向相机的文本标签。使用这些选项：文本、字体、可选择性、颜色、不透明度、高亮颜色、大小。</li><li>&quot;light&quot;：指向（0, 0, 0）的定向光源。使用不透明度选项。</li><li>&quot;.json&quot;：Threejs JSON 文件。使用这些选项：可选择性、高亮颜色。</li><li>&quot;.gltf&quot;：GLTF 文件。使用这些选项：可选择性、高亮颜色。</li><li>&quot;.glb&quot;：GLB 文件。使用这些选项：可选择性、高亮颜色。</li><li>&quot;.geojson&quot;：GeoJSON 文件。使用这些选项：可选择性、颜色、不透明度、高亮颜色。</li></ul><p><code>opttab</code> 中的选项列表：</p><ul><li>vertices: 一个数组，其中每三个数字代表一个三维点（x，y，z）。对于网格，每三个点组成一个三角形。法线遵循<strong>右手</strong>定则。默认为空。</li><li>width: 用于以x轴测量的盒子。默认为1。</li><li>height: 用于以y轴测量的盒子。默认为1。</li><li>length: 用于以z轴测量的盒子。默认为1。</li><li>size: 厚度或宽度。默认为1。</li><li>radius: 用于球体。默认为1。</li><li>segments: 用于球网格的水平段和1/2垂直段。默认为32。</li><li>selectable: 如果为真，则可以选择该对象。默认为真。</li><li>color: 材质颜色，如“red”或“＃FF0000”。默认为“gray”。</li><li>hcolor: 如果被选中，则为高亮颜色。默认为“red”。</li><li>opacity: 材质透明度。默认为1。</li><li>name: 一个字符串，稍后可以被scene.getobj使用。默认为“”。</li><li>text: 标签使用。默认为“”。</li><li>font: 标签使用。默认为“Arial”。</li></ul><p>这里是一些向场景添加对象的示例：</p><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code>scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>grid<span class="token operator">=</span><span class="token string">&#39;plane&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                                                 <span class="token comment">--设置一个平面网格</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;points&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token comment">--添加两个大小为5的点</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;polyline&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">--添加一个蓝色折线</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;polygon&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">--添加一个二维多边形</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>text<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                                <span class="token comment">--添加一个标签</span>
scene<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                                               <span class="token comment">--渲染场景</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a id="scene.getobj"> scene.getobj (name) </a></p><p>在场景中搜索，并返回第一个匹配名称的对象。相机和被选中的对象可以用&quot;camera&quot;和&quot;selected&quot;找到。</p><p><a id="scene.tovector"> scene.tovector (radius, phi, theta) </a></p><p>从球坐标的转换返回 x、y、z。</p><p><a id="scene.topolar"> scene.topolar (x, y, z) </a></p><p>从矢量返回球坐标：半径、phi、theta。</p><p><a id="scene.render"> scene.render ([ms]) </a></p>`,23),k=p('<h2 id="object" tabindex="-1"><a class="header-anchor" href="#object"><span>Object</span></a></h2><p>这部分函数控制场景中的对象。请注意，调用 obj:func(args) 是 scene.func(obj, args) 的语法糖。</p><p><a id="obj:getpos"> obj:getpos () </a></p><p>返回对象的位置：x、y、z。</p><p><a id="obj:setpos"> obj:setpos (x, y, z) </a></p><p>设置对象的位置：x、y、z。</p><p><a id="obj:getrot"> obj:getrot () </a></p><p>返回对象的旋转：x、y、z。</p><p><a id="obj:setrot"> obj:setrot (x, y, z) </a></p><p>设置对象的旋转：x、y、z。</p><p><a id="obj:getscale"> obj:getscale () </a></p><p>返回对象的缩放：x、y、z。</p><p><a id="obj:setscale"> obj:setscale (x, y, z) </a></p><p>设置对象的缩放：x、y、z。</p><p><a id="obj:getchildren"> obj:getchildren () </a></p><p>获取所有子对象并将它们放入作为返回值的表中。</p><p><a id="obj:setchildren"> obj:setchildren (childtab) </a></p><p>将表 childtab 中的所有对象设置为对象的子对象。</p><p><a id="obj:getparent"> obj:getparent () </a></p><p>返回对象的父级。</p><p><a id="obj:setparent"> obj:setparent (parent) </a></p><p>设置对象的父级。</p><p><a id="obj:getmat"> obj:getmat () </a></p><p>返回物体的材质信息表。信息列表:</p><ul><li>类型: 一个材质类型字符串，比如<a href="https://threejs.org/docs/#api/en/materials/MeshBasicMaterial" target="_blank">&quot;MeshBasicMaterial&quot;</a>。</li><li>贴图: 一个贴图编号。</li><li>颜色: 一个颜色字符串，如&quot;red&quot;或&quot;#FF0000&quot;。</li><li>透明度: 一个表示材质多透明的数字。</li></ul><p><a id="obj:setmat"> obj:setmat (opttab) </a></p><p>从opttab中的选项设置物体的材质。选项列表:</p><ul><li>类型: 一个材质类型字符串，比如<a href="https://threejs.org/docs/#api/en/materials/MeshBasicMaterial" target="_blank">&quot;MeshBasicMaterial&quot;</a>。</li><li>贴图: 一个贴图编号或者一个图片文件路径或URL，比如&quot;map.jpg&quot;。</li><li>颜色: 一个颜色字符串，如&quot;red&quot;或&quot;#FF0000&quot;。</li><li>透明度: 一个表示材质多透明的数字。</li></ul><p><a id="obj:getvertices"> obj:getvertices () </a></p><p>返回物体<a href="https://threejs.org/docs/#api/en/core/BufferGeometry" target="_blank">几何体</a>的顶点数组和索引数组（如果有）。</p><p><a id="obj:setvertices"> obj:setvertices (vertices [, indices]) </a></p><p>设置<a href="https://threejs.org/docs/#api/en/core/BufferGeometry" target="_blank">物体几何</a>的顶点（数组）和索引（数组，如果有）。</p><p><a id="obj:getdata"> obj:getdata () </a></p>',33),b=n("a",{href:"https://threejs.org/docs/#api/en/core/Object3D.userData",target:"_blank"},"物体的自定义数据",-1),h=n("p",null,[n("a",{id:"obj:setdata"}," obj:setdata (datatab) ")],-1),m=n("p",null,"将datatab中的（键，值）写入物体的自定义数据字段。",-1),g=n("p",null,[n("a",{id:"obj:tojson"}," obj:tojson (fpath) ")],-1),q=n("p",null,"将对象写入到指定路径的Threejs JSON文件中。",-1),j=n("p",null,[n("a",{id:"obj:delete"},"obj:delete()")],-1),_=n("p",null,"递归删除对象及其所有子对象。",-1),v={href:"https://github.com/huuhghhgyg/MicroCityNotes/issues/new",target:"_blank",rel:"noopener noreferrer"},f=n("strong",null,"反馈",-1);function x(y,z){const t=e("RouterLink"),l=e("ExternalLinkIcon");return i(),u("div",null,[d,n("p",null,[s("渲染场景并检查浏览器，类似 "),a(t,{to:"/docs/web/4.2_operation_system.html#os.getready"},{default:o(()=>[s("os.getready")]),_:1}),s("，并返回相同结果。可以通过毫秒参数控制渲染之间的时间间隔。")]),k,n("p",null,[s("返回存储"),b,s("的表。示例代码请参考"),a(t,{to:"/docs/web/2.2_searching_for_countries.html"},{default:o(()=>[s("2.2搜索国家")]),_:1}),s("。")]),h,m,g,q,j,_,n("blockquote",null,[n("p",null,[s("本文使用ChatGPT翻译，如有遗漏请"),n("a",v,[f,a(l)]),s("。")])])])}const M=c(r,[["render",x],["__file","4.3_scene_and_object.html.vue"]]);export{M as default};
