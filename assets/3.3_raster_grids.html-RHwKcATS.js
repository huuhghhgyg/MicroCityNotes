import{_ as i}from"./button_load-GOP3K2yO.js";import{_ as r}from"./button_action-tmG_4IgV.js";import{_ as a}from"./button_3d-coWyniAs.js";import{_ as d,r as l,o as c,c as g,a as s,b as t,d as n,w as o,e as _}from"./app-DaLjD81q.js";const h="/MicroCityNotes/assets/new_grid-4i1mP770.png",u="/MicroCityNotes/assets/grid_structure-vhTlEgf-.png",m="/MicroCityNotes/assets/grid_menu-7jPQkAi1.png",p="/MicroCityNotes/assets/close_save_grid-mxdTfyrH.png",f="/MicroCityNotes/assets/grid_selection-bdt61Cd7.png",b="/MicroCityNotes/assets/grid_attributes-e5wa0ZGb.png",v={},w=s("h1",{id:"_3-3-栅格图",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-3-栅格图","aria-hidden":"true"},"#"),t(" 3.3 栅格图")],-1),G=s("strong",null,"Grid",-1),y=s("strong",null,"Data",-1),x=s("strong",null,"Workspace",-1),C=s("strong",null,"Grid",-1),N=s("strong",null,"modules",-1),S=_('<h2 id="opening-creating-saving-and-closing-grids" tabindex="-1"><a class="header-anchor" href="#opening-creating-saving-and-closing-grids" aria-hidden="true">#</a> Opening, Creating, Saving and Closing Grids</h2><p>Users can click <img src="'+i+'" alt="button"><strong>Load</strong> button or <strong>File-&gt;Grid-&gt;Load</strong> menu item to open a <strong>Grid</strong>. Creating new <strong>Grid</strong> can be done from menu <strong>File-&gt;Grid-&gt;New</strong> and the pop-up dialog:</p><p><img src="'+h+'" alt="new grid">    <img src="'+u+'" alt="grid_structure"> The above right figure is the data structure and definitions of a Grid. A Grid starts from its bottom left corner which has coordinate <strong>(xMin, yMin)</strong>, contains <strong>NX*NY Square Cells</strong>. Each cell has its own <strong>Integer Coordinate</strong> (X, Y), in the range of (0, 0) to (XMax, YMax).</p><p>Saving <strong>Grid</strong> can be done from the right click context menu <strong>Save or Save As</strong>. You can also close a <strong>Grid</strong> from the menu and get a prompt dialog to save it.</p><p><img src="'+m+'" alt="grid menu">    <img src="'+p+'" alt="close and save"></p><h2 id="showing-and-editing-grids" tabindex="-1"><a class="header-anchor" href="#showing-and-editing-grids" aria-hidden="true">#</a> Showing and Editing Grids</h2>',6),M=s("strong",null,"Grid",-1),k=s("strong",null,"Data",-1),T=s("strong",null,"Action",-1),A=s("img",{src:r,alt:"button"},null,-1),D=s("strong",null,"Grid",-1),E=s("strong",null,"Attributes",-1),P=s("strong",null,"Settings",-1),V=s("p",null,[s("img",{src:f,alt:"grid selection"}),t("    "),s("img",{src:b,alt:"grid_attributes"})],-1),B=s("h2",{id:"display-settings-and-3d-view",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#display-settings-and-3d-view","aria-hidden":"true"},"#"),t(" Display Settings and 3D View")],-1),I=s("strong",null,"Grid",-1),L=s("strong",null,"Settings",-1),Y=s("img",{src:a,alt:"button"},null,-1),R=s("strong",null,"Grid",-1);function U(X,j){const e=l("RouterLink");return c(),g("div",null,[w,s("p",null,[t("MicroCity can open, create and edit SAGA Grid (*.sgrd) which is called "),G,t(" and maintained in the "),y,t(" Tab of the "),x,t(" Panel. Image files (*.bmp, *.gif, *.jpg, *.png, *.tif, *.pcx) can be opened as "),C,t(" as well. By using "),N,t(" (see "),n(e,{to:"/docs/3.7_modules.html"},{default:o(()=>[t("3.7")]),_:1}),t(") other raster file formats, such like ESRI Arc/Info Grid (*.adf) and Surfer Grid (*.grd), can also be imported or exported.")]),S,s("p",null,[t("Double click a "),M,t(" from the "),k,t(" Tab will give you a map view (for maps and layers see "),n(e,{to:"/docs/3.6_maps_and_layers.html"},{default:o(()=>[t("3.6")]),_:1}),t("). Toggle "),T,t(" botton "),A,t(" and select a range of cells in a "),D,t(". Then the value of these cells can be edited in the "),E,t(" Tab of the "),P,t(" Panel.")]),V,B,s("p",null,[t("Users can show cell values, change color and set transparency of a "),I,t(" by using "),L,t(" Panel. Using "),Y,t(" button can creat a 3D surface of a "),R,t(" in which cell values are translated to elevation (see "),n(e,{to:"/docs/3.6_maps_and_layers.html#controlling-map-views"},{default:o(()=>[t("3.6")]),_:1}),t(").")])])}const O=d(v,[["render",U],["__file","3.3_raster_grids.html.vue"]]);export{O as default};
