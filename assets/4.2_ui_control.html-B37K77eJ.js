import{_ as n}from"./icon_script_editor-S0ak5iz0.js";import{_ as a}from"./shot_parameter_id-DeJphuXJ.js";import{_ as s,o as t,c as p,e}from"./app-DFIg03Dy.js";const o={},c=e('<h1 id="_4-2-控制用户界面" tabindex="-1"><a class="header-anchor" href="#_4-2-控制用户界面"><span>4.2 控制用户界面</span></a></h1><p>Microcity Script 可用于控制用户界面上的一些功能，包括模块、数据对象、消息等等。在 <img src="'+n+`" alt="icon"><strong>ScriptEditor</strong> 的<strong>项目</strong>标签的&quot;user_interface&quot;文件夹中可以找到一些示例代码。</p><h2 id="基本用户界面" tabindex="-1"><a class="header-anchor" href="#基本用户界面"><span>基本用户界面</span></a></h2><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Print</span> <span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在<em>消息面板</em>中打印数值。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Note</span> <span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>通知用户并暂停执行。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetProcessText</span> <span class="token punctuation">(</span><span class="token string">&quot;processing&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在<em>MicroCity</em>的左下角设置一个文本。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetProgress</span> <span class="token punctuation">(</span>position<span class="token punctuation">,</span> range<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置位于<em>MicroCity</em>右下角的进度条的 <em>position/range</em> 值。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Sleep</span> <span class="token punctuation">(</span>milliseconds<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>暂停执行 <em>milliseconds</em> 毫秒。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetReady</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>MicroCity与Lua引擎共享同一线程。Lua中的计算量较大会阻塞MicroCity界面。在内部使用该函数可以使MicroCity界面响应用户操作。如果用户取消当前执行，则返回false。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetClickXY</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>返回用户在<em>地图视图</em>中点击的 x,y 坐标。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetDragExtent</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>返回用户使用鼠标在<em>地图视图</em>中拖动矩形时的底部左侧和顶部右侧坐标：Lx，By，Rx，Ty。</p><h2 id="数据对象" tabindex="-1"><a class="header-anchor" href="#数据对象"><span>数据对象</span></a></h2><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line">PATH</span>
<span class="line"></span></code></pre></div><p>内部全局变量，保存当前工作目录的字符串，例如&quot;c:\\microcity&quot;。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Open</span> <span class="token punctuation">(</span><span class="token string">&quot;.\\\\shapes.shp&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;.\\\\grid.sgrd&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;.\\\\table.dbf&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;.\\\\scene.m3d&quot;</span> <span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从当前工作目录或打开的数据中打开并返回<em>Shapes</em>、<em>Table</em>、<em>Grid</em>和<em>Scene</em>对象。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Close</span> <span class="token punctuation">(</span>Shapes<span class="token operator">|</span>Grid<span class="token operator">|</span>Table<span class="token operator">|</span>Scene<span class="token operator">|</span>Network<span class="token operator">|</span>RndEngine<span class="token operator">|</span>LPModel<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>关闭已打开或创建的<em>Shapes</em>、<em>Table</em>、<em>Grid</em>、<em>Scene</em>、<em>Network</em>、<em>RndEngine</em>或<em>LPModel</em>对象。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Update</span> <span class="token punctuation">(</span>Shapes<span class="token operator">|</span>Grid<span class="token operator">|</span>Table <span class="token punctuation">[</span><span class="token punctuation">,</span> bShow <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在<em>MicroCity</em>中更新<em>Shapes</em>、<em>Grid</em>或<em>Table</em>对象的当前更改。<em>bShow</em>表示是否创建对象的视图。如果用户取消当前执行，返回false。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">CreateMap</span> <span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> Shapes1<span class="token operator">|</span>Grid1 <span class="token punctuation">[</span><span class="token punctuation">,</span> Shapes2<span class="token operator">|</span>Grid2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>创建一个<em>地图视图</em>，以显示按参数中的顺序分层排列的对象。</p><h2 id="模块和参数" tabindex="-1"><a class="header-anchor" href="#模块和参数"><span>模块和参数</span></a></h2><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">AddModule</span> <span class="token punctuation">(</span><span class="token string">&quot;Function&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre></div><p>此函数可以将Lua函数作为模块添加到当前模块库。模块的默认名称是函数的名称。返回一个<em>Module</em>对象。</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Node&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Value&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> default <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Range&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> low <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> high <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Check&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> default <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;String&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Choice&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;choice1|choice2|&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> choice <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;File&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;c:\\\\default.txt&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;color&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;255 255 255&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Shapes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Grid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Scene&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Table&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">AddParameter</span><span class="token punctuation">(</span>Module<span class="token punctuation">,</span> ParentNode<span class="token punctuation">,</span> <span class="token string">&quot;Field&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些函数可以在模块的设置面板中添加参数。返回相应的值或对象。<em>ParentNode</em> 可以设置为 <em>AddParameter</em> 函数的第一个返回值。如果 <em>&quot;Field&quot;</em> 在第三个位置，则 <em>parent_node</em> 可以设置为 <em>Table</em> 或 <em>Shapes</em> 对象，以获取其属性表的头部。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetParameter</span><span class="token punctuation">(</span>Shapes<span class="token operator">|</span>Table<span class="token operator">|</span>Grid<span class="token operator">|</span>Scene<span class="token operator">|</span>Module<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从对象的设置面板中返回指定的参数。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetParameter</span><span class="token punctuation">(</span>Shapes<span class="token operator">|</span>Table<span class="token operator">|</span>Grid<span class="token operator">|</span>Scene<span class="token operator">|</span>Module<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> Number <span class="token operator">|</span> <span class="token string">&quot;String&quot;</span> <span class="token operator">|</span> Object<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在对象的设置面板中设置指定的参数。如果成功，则返回 <em>true</em>。请注意，选择参数应从1开始。可以在下图中的参数帮助文本中找到参数的 <em>&quot;id&quot;</em>。</p><p><img src="`+a+'" alt="shot"></p><blockquote><p>这篇文章使用ChatGPT翻译自其他语言，如果有问题请在<a href="https://github.com/huuhghhgyg/MicroCityNotes/issues/new" target="_blank" rel="noopener noreferrer"><strong>反馈</strong></a>页面提交反馈。</p></blockquote>',41),l=[c];function u(i,r){return t(),p("div",null,l)}const m=s(o,[["render",u],["__file","4.2_ui_control.html.vue"]]),h=JSON.parse('{"path":"/docs/desktop/4.2_ui_control.html","title":"4.2 控制用户界面","lang":"zh-CN","frontmatter":{"prev":"./4.1_si_overview.md","next":"./4.3_shapes_and_tables.md","description":"4.2 控制用户界面 Microcity Script 可用于控制用户界面上的一些功能，包括模块、数据对象、消息等等。在 iconScriptEditor 的项目标签的\\"user_interface\\"文件夹中可以找到一些示例代码。 基本用户界面 在消息面板中打印数值。 通知用户并暂停执行。 在MicroCity的左下角设置一个文本。 设置位于Micro...","head":[["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/docs/desktop/4.2_ui_control.html"}],["meta",{"property":"og:site_name","content":"MicroCity笔记"}],["meta",{"property":"og:title","content":"4.2 控制用户界面"}],["meta",{"property":"og:description","content":"4.2 控制用户界面 Microcity Script 可用于控制用户界面上的一些功能，包括模块、数据对象、消息等等。在 iconScriptEditor 的项目标签的\\"user_interface\\"文件夹中可以找到一些示例代码。 基本用户界面 在消息面板中打印数值。 通知用户并暂停执行。 在MicroCity的左下角设置一个文本。 设置位于Micro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T05:56:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-19T05:56:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.2 控制用户界面\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T05:56:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本用户界面","slug":"基本用户界面","link":"#基本用户界面","children":[]},{"level":2,"title":"数据对象","slug":"数据对象","link":"#数据对象","children":[]},{"level":2,"title":"模块和参数","slug":"模块和参数","link":"#模块和参数","children":[]}],"git":{"updatedTime":1710827784000,"contributors":[{"name":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":2}]},"filePathRelative":"docs/desktop/4.2_ui_control.md","autoDesc":true,"excerpt":"\\n<p>Microcity Script 可用于控制用户界面上的一些功能，包括模块、数据对象、消息等等。在 <strong>ScriptEditor</strong> 的<strong>项目</strong>标签的\\"user_interface\\"文件夹中可以找到一些示例代码。</p>\\n<h2>基本用户界面</h2>\\n<div class=\\"language-lua\\" data-highlighter=\\"prismjs\\" data-ext=\\"lua\\" data-title=\\"lua\\"><pre class=\\"language-lua\\"><code><span class=\\"line\\"><span class=\\"token function\\">Print</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"hello\\"</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">...</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{m as comp,h as data};
