const e=JSON.parse('{"key":"v-ed3d82b0","path":"/notes/lua.html","title":"LUA语言快速上手","lang":"zh-CN","frontmatter":{"head":[["meta",{"name":"keywords","content":"MicroCity 编程 脚本 lua"}],["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/notes/lua.html"}],["meta",{"property":"og:site_name","content":"MicroCity笔记"}],["meta",{"property":"og:title","content":"LUA语言快速上手"}],["meta",{"property":"og:description","content":"由于MicroCity采用的脚本语言是LUA，因此在开始使用MicroCity编写脚本之前需要先熟悉LUA的基本用法。 变量和函数定义 lua会自动识别变量类型，因此无需在变量名称前定义变量类型，直接赋值即可。 函数的定义上方简单定义了一个add()函数，目的是把输入的两个变量相加返回结果。 变量分为全局变量和局部变量，函数也是如此。局部变量和函数的定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-08T15:59:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-08T15:59:12.000Z"}]],"description":"由于MicroCity采用的脚本语言是LUA，因此在开始使用MicroCity编写脚本之前需要先熟悉LUA的基本用法。 变量和函数定义 lua会自动识别变量类型，因此无需在变量名称前定义变量类型，直接赋值即可。 函数的定义上方简单定义了一个add()函数，目的是把输入的两个变量相加返回结果。 变量分为全局变量和局部变量，函数也是如此。局部变量和函数的定..."},"excerpt":"","headers":[{"level":2,"title":"变量和函数定义","slug":"变量和函数定义","link":"#变量和函数定义","children":[]},{"level":2,"title":"条件","slug":"条件","link":"#条件","children":[]},{"level":2,"title":"循环","slug":"循环","link":"#循环","children":[{"level":3,"title":"for","slug":"for","link":"#for","children":[]},{"level":3,"title":"while","slug":"while","link":"#while","children":[]},{"level":3,"title":"循环操作符","slug":"循环操作符","link":"#循环操作符","children":[]}]},{"level":2,"title":"Lua的小特性：集合","slug":"lua的小特性-集合","link":"#lua的小特性-集合","children":[]}],"git":{"updatedTime":1670515152000,"contributors":[{"name":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":1}]},"filePathRelative":"notes/lua.md","autoDesc":true}');export{e as data};
