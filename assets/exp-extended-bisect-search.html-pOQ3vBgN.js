import{_ as e,r as p,o as l,c as o,d as c,a as s,b as n,e as a}from"./app-iiSxc1XK.js";const i="/MicroCityNotes/assets/exp-bisect-background-CXR2HMGG.svg",r="/MicroCityNotes/assets/exp-bisect-lt-CveOTmdW.svg",u="/MicroCityNotes/assets/exp-bisect-gt-D4pXJcdz.svg",d="/MicroCityNotes/assets/exp-bisect-steps-5MEs9mAx.svg",m={},k=s("h1",{id:"指数拓展的二分搜索",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#指数拓展的二分搜索"},[s("span",null,"指数拓展的二分搜索")])],-1),b=s("p",null,[n("二分法搜索是一种非常高效的搜索算法，它可以在 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(\\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n(" 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。")],-1),h=s("p",null,"然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。",-1),g=s("p",null,[s("img",{src:i,alt:"背景"})],-1),v=s("h2",{id:"基本思想",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#基本思想"},[s("span",null,"基本思想")])],-1),y=s("p",null,"指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则直接使用二分搜索；如果目标值不在这个范围内，我们就不断地将范围扩大一倍，直到目标值在这个范围内，然后在最后一个增长的区间内使用二分搜索。",-1),w=a('<h3 id="范围判别" tabindex="-1"><a class="header-anchor" href="#范围判别"><span>范围判别</span></a></h3><p>假设我们可以通过某个函数判断目标值是否在给定的范围内。在这里，我们将这个判断函数定义为 <code>compare(x, obj)</code>，用于模拟判断结果。<code>obj</code> 为目标值，<code>x</code> 为试验值：</p><ul><li>如果 <code>obj</code> 在 <code>x</code> 的左侧，则返回 -1；</li><li>如果 <code>obj</code> 在 <code>x</code> 的右侧，则返回 1；</li><li>如果 <code>obj</code> 等于 <code>x</code>，则返回 0。</li></ul>',3),x=s("p",null,[n("显然，如果 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"b")]),s("annotation",{encoding:"application/x-tex"},"lb")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"b")])])]),n(" 和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u"),s("mi",null,"b")]),s("annotation",{encoding:"application/x-tex"},"ub")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"b")])])]),n(" 分别是搜索范围的下界和上界，如果它们同时为-1 或 1，则说明目标值不在这个范围内（对应 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"b")]),s("annotation",{encoding:"application/x-tex"},"lb")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"b")])])]),n(" 和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u"),s("mi",null,"b")]),s("annotation",{encoding:"application/x-tex"},"ub")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"b")])])]),n(" 同时小于或大于目标）。")],-1),f=a('<p>范围过小，<code>compare(x, obj)</code> 返回 -1 <img src="'+r+'" alt="范围过小"></p><p>范围过大，<code>compare(x, obj)</code> 返回 1 <img src="'+u+'" alt="范围过大"></p><p>受到二分法的思路启发，如果我们以指数级别扩展范围，那么我们也可以很快地找到包含目标值的范围。范围扩展的步骤可以用下面这张图描述</p><p><img src="'+d+`" alt="步骤"></p><p>到达这一步，我们就可以使用二分搜索来找到目标值了。</p><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h2><iframe src="https://microcity.github.io/#/H4sIAAAAAAAACu2WW2vbMBTH8xzIdzgEQhNqZ3aaC4ymn6RQ7Fhp3Cl2kG3WvZV1tNmaXVibMrpujFFYX5amsEHX26eJ7fRpX2HItziXUvpQxph+D7YjHZ3zl86RopquoMQDIwiCUC4X6VuslIT4m7JQKCwkxGKlUBRFsShUEmKhWCnScQ8tjGIZpkQSgmBKRJYwXjNusbur/x+F58Fuf7K/7didfafbd173Ukms1yQMurwGVSiUSuUSAM+Du3c8OH/j/NwZnnTdgxfux57zZdveuEwlU0nqpXcw+PXSOdkbXm/a21dOt59K1i2tZqq6BjW92ZIIyq5z1G0ulQQAUOuwDoteHLOBNCDItIgGvOh3I2wgz2RpyiRmETYJgDQllfQenh6ns03ns7Nrn1K5g/OO3d5y3h26P77GhKH11oqsahJ5tmIgidQaWSxzYMkctAiqqYaqa4Fanodh79q96t1cfBj2juy3z70p0i4sQ5U+dBKJt2iT5TUFLZE/qMa+dQICFRxE8BfRPt242TwekxWuqBfOS080hVnyA80UyTAQMbOWDEtUJAdpS66mIZ+n8vJ5SEPTMkyQEcjq6ioiYDYkDXBgg+OunjZUjOgwns52KTYNRR9ZjSQ2VQWqkMUyzFNN8AgKs8wIMixsQjWqkqaqxOskRK1HplXgRa8ixi2iZDRVZbqnRVTNzBomUbXVfF0nTcnMpg1k0iGmDpl6mqMDcxNhgzochb4tsnX/yNadkaedyQRJTyYMtVjQsR/B7hjLAQd+kQSbyN8xEBRg+8jZ/45l+30nNJgpPkjVY8goHGSUNBclj/qmuRu1WEFLOD2/jCbt6cpOjhirq5k6sFzN1Lll06LvdDiz+EKqdZrfRRBmZC3cpfOQDap6IgMzY9r9LUv2Dxa73ffCjocMKsbbI7PChucFf9+weCIsHg8bJj6W0iD/t5wRo9Ny2N90947DUya+Lzmoq5qEV+gg/8tbtemDM5dK+rrn/FPWvdh1Ph/+vjyY4yJXc8vm4OzV4GzH7Xb8nmnnub/9l/hf0ZKMB7/R3HH/o0zc/0pimd3/GAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG4178AVEjTe0AKAAA" width="100%" height="600" style="border-radius:8px;"></iframe><p>🔗 <a href="https://microcity.github.io/#snzd6a" target="_blank" rel="noopener noreferrer">在 MicroCityWeb 中打开</a></p><p>源代码：</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token comment">-- 初始化数据</span></span>
<span class="line"><span class="token keyword">local</span> obj <span class="token operator">=</span> <span class="token number">25565</span>  <span class="token comment">-- 用于测试的目标值</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 定义比较函数</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">compare</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> x <span class="token operator">&lt;</span> obj <span class="token keyword">then</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line">    <span class="token keyword">elseif</span> x <span class="token operator">&gt;</span> obj <span class="token keyword">then</span> <span class="token keyword">return</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 指数拓展的二分搜索</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">exp_binary_search</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> ub<span class="token punctuation">,</span> precision<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 设置默认参数</span></span>
<span class="line">    lb <span class="token operator">=</span> lb <span class="token keyword">or</span> <span class="token operator">-</span><span class="token number">1</span></span>
<span class="line">    ub <span class="token operator">=</span> ub <span class="token keyword">or</span> <span class="token number">1</span></span>
<span class="line">    precision <span class="token operator">=</span> precision <span class="token keyword">or</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- 定义局部binary_search函数</span></span>
<span class="line">    <span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> ub<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">assert</span><span class="token punctuation">(</span>ub <span class="token operator">&gt;=</span> lb<span class="token punctuation">,</span> <span class="token string">&quot;ub=&quot;</span> <span class="token operator">..</span> ub <span class="token operator">..</span> <span class="token string">&quot; must be bigger than lb=&quot;</span> <span class="token operator">..</span> lb<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">while</span> ub <span class="token operator">-</span> lb <span class="token operator">&gt;</span> precision <span class="token keyword">do</span></span>
<span class="line">            <span class="token keyword">local</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>lb <span class="token operator">+</span> ub<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span></span>
<span class="line">            <span class="token keyword">local</span> result <span class="token operator">=</span> <span class="token function">compare</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span> obj<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> result <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">then</span></span>
<span class="line">                lb <span class="token operator">=</span> mid</span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;set lb to %f&quot;</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">elseif</span> result <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">then</span></span>
<span class="line">                ub <span class="token operator">=</span> mid</span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;set ub to %f&quot;</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">else</span></span>
<span class="line">                <span class="token keyword">break</span></span>
<span class="line">            <span class="token keyword">end</span></span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span>lb <span class="token operator">+</span> ub<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub</span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- 判断lb和ub</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;compare: %d, %d&quot;</span><span class="token punctuation">,</span> <span class="token function">compare</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">compare</span><span class="token punctuation">(</span>ub<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token function">compare</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">compare</span><span class="token punctuation">(</span>ub<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token keyword">do</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;lb=%f,\\tub=%f&quot;</span><span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> lb <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">then</span></span>
<span class="line">            ub <span class="token operator">=</span> ub <span class="token operator">+</span> <span class="token punctuation">(</span>ub <span class="token operator">-</span> lb<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;将ub拓展到%f&quot;</span><span class="token punctuation">,</span> ub<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elseif</span> lb <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">then</span></span>
<span class="line">            lb <span class="token operator">=</span> lb <span class="token operator">-</span> <span class="token punctuation">(</span>ub <span class="token operator">-</span> lb<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;将lb拓展到%f&quot;</span><span class="token punctuation">,</span> lb<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>lb<span class="token punctuation">,</span> ub<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 调用函数</span></span>
<span class="line"><span class="token keyword">local</span> result<span class="token punctuation">,</span> final_lb<span class="token punctuation">,</span> final_ub <span class="token operator">=</span> <span class="token function">exp_binary_search</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;搜索结果：&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> <span class="token string">&#39;\\t上下界：&#39;</span><span class="token punctuation">,</span> final_lb<span class="token punctuation">,</span> final_ub<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function _(M,j){const t=p("Mermaid");return l(),o("div",null,[k,b,h,g,v,y,c(t,{id:"mermaid-18",code:"eJxLy8kvT85ILCpRCHHhUgCC4BIgJ/rpnoany7tjFXR17RQ88zKBAh1zgQJPe6Y97W96NnVDLFgtSAasxDk/tyCxKNU5IzU5O/rZ+ikv9jW/2Lfz+dSepw17IEqRVYC1uFYUJOalVL+c0/BiWeOzzpVPN06FaLGv5QLrgCgAqa15NmN9jUJoQUpiSapTfmleSnH0s9lbnk3bgGYHsgokOzCMezphWY2CU2ZeYlFlcGpiUXJG9JNdPU872p7NX/qsc18sRD2yPMSwvJToF/unPJ097/nuyc/mzYnlAgBAWIhl"}),w,x,f])}const N=e(m,[["render",_],["__file","exp-extended-bisect-search.html.vue"]]),C=JSON.parse('{"path":"/notes/gallery/exp-extended-bisect-search.html","title":"指数拓展的二分搜索","lang":"zh-CN","frontmatter":{"description":"指数拓展的二分搜索 二分法搜索是一种非常高效的搜索算法，它可以在 O(logn) 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。 然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。 背景 基本思想 指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则直接使用...","head":[["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/notes/gallery/exp-extended-bisect-search.html"}],["meta",{"property":"og:site_name","content":"MicroCity笔记"}],["meta",{"property":"og:title","content":"指数拓展的二分搜索"}],["meta",{"property":"og:description","content":"指数拓展的二分搜索 二分法搜索是一种非常高效的搜索算法，它可以在 O(logn) 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。 然而，在某些情况下，搜索的目标可能不在给定的范围内。在这种情况下，我们可以使用指数拓展的二分搜索。 背景 基本思想 指数拓展的二分搜索的基本思想是，我们首先确定一个初始范围。如果目标值在这个范围内，则直接使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-04T17:44:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-04T17:44:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"指数拓展的二分搜索\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-04T17:44:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本思想","slug":"基本思想","link":"#基本思想","children":[{"level":3,"title":"范围判别","slug":"范围判别","link":"#范围判别","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"git":{"updatedTime":1733334290000,"contributors":[{"name":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":1}]},"filePathRelative":"notes/gallery/exp-extended-bisect-search.md","autoDesc":true,"excerpt":"\\n<p>二分法搜索是一种非常高效的搜索算法，它可以在 <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(\\\\log n)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mop\\">lo<span style=\\"margin-right:0.01389em;\\">g</span></span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord mathnormal\\">n</span><span class=\\"mclose\\">)</span></span></span></span> 的时间复杂度内找到目标值，适用于搜索目标在给定的范围内的情况。</p>"}');export{N as comp,C as data};
