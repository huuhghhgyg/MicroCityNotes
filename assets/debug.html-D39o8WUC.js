import{_ as l,e as o,i as t,h as n,g as a,j as i,k as u,r as c,o as p}from"./app-CGYoAsnN.js";const r={};function d(h,e){const s=c("RouteLink");return p(),o("div",null,[e[5]||(e[5]=t(`<h1 id="调试相关" tabindex="-1"><a class="header-anchor" href="#调试相关"><span>调试相关</span></a></h1><p>本页介绍 MicroCity Web 调试（debug）相关的函数和快捷键。</p><h2 id="清除输出" tabindex="-1"><a class="header-anchor" href="#清除输出"><span>清除输出</span></a></h2><p>右键输出区域可以输入命令，输入 <code>print()</code> 可以清除输出区域的内容。</p><h2 id="调试器快捷键" tabindex="-1"><a class="header-anchor" href="#调试器快捷键"><span>调试器快捷键</span></a></h2><p>在调试程序的过程中，特别是在断点处，可以使用F9（Step Over）、F10（Step Into）、F11（Step Out）控制程序运行。</p><ul><li><kbd>F9</kbd> <strong>Step Over</strong>：跳过当前行，执行下一行</li><li><kbd>F10</kbd> <strong>Step Into</strong>：进入当前行，如果当前行是函数调用，则进入函数内部</li><li><kbd>F11</kbd> <strong>Step Out</strong>：跳出当前函数，执行函数调用的下一行</li></ul><h2 id="debug命令" tabindex="-1"><a class="header-anchor" href="#debug命令"><span>Debug命令</span></a></h2><h3 id="监视变量" tabindex="-1"><a class="header-anchor" href="#监视变量"><span>监视变量</span></a></h3><p>在控制台使用 <code>debug.watch()</code> 命令监视变量。</p><p>例如，在调试的过程中想要监视 <code>a</code> 变量的值，可以使用 <code>debug.watch(&#39;a&#39;)</code> 命令。</p><blockquote><p>右键输出区域可以输入命令</p></blockquote><h3 id="堆栈跟踪" tabindex="-1"><a class="header-anchor" href="#堆栈跟踪"><span>堆栈跟踪</span></a></h3><p>使用 <code>debug.traceback()</code> 函数可以打印出当前的堆栈跟踪信息</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 某些代码逻辑</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>debug<span class="token punctuation">.</span><span class="token function">traceback</span><span class="token punctuation">(</span><span class="token string">&quot;Stack trace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 其他代码逻辑</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">anotherFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token function">anotherFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">Stack trace</span>
<span class="line">stack traceback:</span>
<span class="line">[string &quot;function myFunction() ...&quot;]:3: in function &#39;myFunction&#39;</span>
<span class="line">[string &quot;function myFunction() ...&quot;]:8: in function &#39;anotherFunction&#39;</span>
<span class="line">[string &quot;function myFunction() ...&quot;]:11: in main chunk</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行状态" tabindex="-1"><a class="header-anchor" href="#运行状态"><span>运行状态</span></a></h3>`,18)),n("ul",null,[n("li",null,[e[1]||(e[1]=n("code",null,"debug.debug()",-1)),e[2]||(e[2]=a(" 进入Debug模式。常用于在程序运行过程中进入Debug模式。如果想要启动时就进入Debug模式，可以右键顶部▶️按钮。详见 ")),i(s,{to:"/notes/web-ui.html#%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6"},{default:u(()=>e[0]||(e[0]=[a("用户界面简介 - 运行状态")])),_:1}),e[3]||(e[3]=a("。"))]),e[4]||(e[4]=n("li",null,[n("code",null,"debug.pause()"),a(" 暂停程序运行。顶部运行按钮▶️会亮起，暂停按钮⏸️熄灭。")],-1))]),e[6]||(e[6]=t('<h2 id="其他调试命令" tabindex="-1"><a class="header-anchor" href="#其他调试命令"><span>其他调试命令</span></a></h2><p>Lua 的 Debug 函数大多都适用于 MicroCity Web，可以参考：</p><ul><li><a href="https://www.lua.org/manual/5.4/manual.html#6.10" target="_blank" rel="noopener noreferrer">The Debug Library | Lua 5.4 Reference Manual</a></li><li><a href="https://www.runoob.com/lua/lua-debug.html" target="_blank" rel="noopener noreferrer">Lua 调试(Debug) | 菜鸟教程</a></li></ul><h2 id="文件保存" tabindex="-1"><a class="header-anchor" href="#文件保存"><span>文件保存</span></a></h2><p>MicroCity Web 在保存文件时可以选择保存为 <code>.mw</code> 文件和 <code>.lua</code> 文件。</p><ul><li><code>.mw</code> 文件：打包当前的整个项目，包含当前打开的代码文件和虚拟磁盘中的文件。</li><li><code>.lua</code> 文件：仅保存当前编辑的代码文件。常用于仅编写 lua 脚本和修改自定义<code>.lua</code>库文件的情况。</li></ul>',6))])}const b=l(r,[["render",d],["__file","debug.html.vue"]]),m=JSON.parse('{"path":"/notes/debug.html","title":"调试相关","lang":"zh-CN","frontmatter":{"description":"调试相关 本页介绍 MicroCity Web 调试（debug）相关的函数和快捷键。 清除输出 右键输出区域可以输入命令，输入 print() 可以清除输出区域的内容。 调试器快捷键 在调试程序的过程中，特别是在断点处，可以使用F9（Step Over）、F10（Step Into）、F11（Step Out）控制程序运行。 F9 Step Over...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://huuhghhgyg.github.io/MicroCityNotes/en/notes/debug.html"}],["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/notes/debug.html"}],["meta",{"property":"og:site_name","content":"MicroCity笔记"}],["meta",{"property":"og:title","content":"调试相关"}],["meta",{"property":"og:description","content":"调试相关 本页介绍 MicroCity Web 调试（debug）相关的函数和快捷键。 清除输出 右键输出区域可以输入命令，输入 print() 可以清除输出区域的内容。 调试器快捷键 在调试程序的过程中，特别是在断点处，可以使用F9（Step Over）、F10（Step Into）、F11（Step Out）控制程序运行。 F9 Step Over..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-15T01:24:13.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T01:24:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"调试相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-15T01:24:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"清除输出","slug":"清除输出","link":"#清除输出","children":[]},{"level":2,"title":"调试器快捷键","slug":"调试器快捷键","link":"#调试器快捷键","children":[]},{"level":2,"title":"Debug命令","slug":"debug命令","link":"#debug命令","children":[{"level":3,"title":"监视变量","slug":"监视变量","link":"#监视变量","children":[]},{"level":3,"title":"堆栈跟踪","slug":"堆栈跟踪","link":"#堆栈跟踪","children":[]},{"level":3,"title":"运行状态","slug":"运行状态","link":"#运行状态","children":[]}]},{"level":2,"title":"其他调试命令","slug":"其他调试命令","link":"#其他调试命令","children":[]},{"level":2,"title":"文件保存","slug":"文件保存","link":"#文件保存","children":[]}],"git":{"updatedTime":1705281853000,"contributors":[{"name":"huuhghhgyg","username":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":7,"url":"https://github.com/huuhghhgyg"}],"changelog":[{"hash":"0a7eb852e0ab52dccf1fd497bbb5b6ede1646330","date":1705281853000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"[update] 删除gz相关内容"},{"hash":"fda6c5350af6ea8264445a3085a73fc1bab5555f","date":1704686272000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"[update] 更新文件保存相关内容"},{"hash":"e849e8b0fe3614cce0cb7d6d1494fde925ce3887","date":1704439056000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"[update] 更新文件保存相关"},{"hash":"d34a6d7b746e210636a3b9505b4e42850cd11e0a","date":1700494063000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"[chore] 添加目录和链接"},{"hash":"1534c247ecab20d88e89ecca51142a4327d4168d","date":1700493324000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"补充内容 修正格式"},{"hash":"1bead53bce9792ac92292379df169d6e1edada48","date":1699368898000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"添加MicroCity控制按键"},{"hash":"1b8a0914287bdce13e88a1e28db13111b296f39a","date":1699367062000,"email":"huuhghhgyg@outlook.com","author":"huuhghhgyg","message":"添加debug示例代码"}]},"filePathRelative":"notes/debug.md","autoDesc":true,"excerpt":"\\n<p>本页介绍 MicroCity Web 调试（debug）相关的函数和快捷键。</p>\\n<h2>清除输出</h2>\\n<p>右键输出区域可以输入命令，输入 <code>print()</code> 可以清除输出区域的内容。</p>\\n<h2>调试器快捷键</h2>\\n<p>在调试程序的过程中，特别是在断点处，可以使用F9（Step Over）、F10（Step Into）、F11（Step Out）控制程序运行。</p>\\n<ul>\\n<li><kbd>F9</kbd> <strong>Step Over</strong>：跳过当前行，执行下一行</li>\\n<li><kbd>F10</kbd> <strong>Step Into</strong>：进入当前行，如果当前行是函数调用，则进入函数内部</li>\\n<li><kbd>F11</kbd> <strong>Step Out</strong>：跳出当前函数，执行函数调用的下一行</li>\\n</ul>"}');export{b as comp,m as data};
