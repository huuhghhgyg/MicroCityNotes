import{_ as n}from"./coordinate-3f58bdc2.js";import{_ as s,o as a,c as t,e}from"./app-5299c7c5.js";const p={},o=e('<h1 id="_3d-场景" tabindex="-1"><a class="header-anchor" href="#_3d-场景" aria-hidden="true">#</a> 3D 场景</h1><p>本节将介绍三维场景及其设置。</p><h2 id="microcityweb三维场景坐标系" tabindex="-1"><a class="header-anchor" href="#microcityweb三维场景坐标系" aria-hidden="true">#</a> MicroCityWeb三维场景坐标系</h2><p>MicroCityWeb中的三维场景坐标系符合右手坐标系，各个坐标轴的正方向具体见下图。</p><div style="text-align:center;"><p><img src="'+n+`" alt="MicroCityWeb中的坐标系"> MicroCityWeb中的坐标系</p></div><p>手动绘制上图坐标轴的代码</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>grid<span class="token operator">=</span><span class="token string">&quot;plane&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">-- x</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;polyline&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;points&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> labelx <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>text<span class="token operator">=</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
labelx<span class="token punctuation">:</span><span class="token function">setpos</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">-- y</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;polyline&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;points&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> labelx <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>text<span class="token operator">=</span><span class="token string">&quot;y&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
labelx<span class="token punctuation">:</span><span class="token function">setpos</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">-- z</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;polyline&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;points&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>vertices <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> labelx <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">addobj</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>text<span class="token operator">=</span><span class="token string">&quot;z&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
labelx<span class="token punctuation">:</span><span class="token function">setpos</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>

scene<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置场景" tabindex="-1"><a class="header-anchor" href="#设置场景" aria-hidden="true">#</a> 设置场景</h2><p>设置场景需要用到 <code>setenv</code> 函数，具体用法如下</p><div class="language-lua" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> s <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>grid<span class="token operator">=</span><span class="token string">&quot;plane|sphere|none&quot;</span><span class="token punctuation">,</span> bgcolor<span class="token operator">=</span><span class="token string">&quot;rgb(255, 255, 255)&quot;</span><span class="token punctuation">,</span> rotspeed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> transpeed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> camtype<span class="token operator">=</span><span class="token string">&quot;ortho|persp&quot;</span><span class="token punctuation">,</span> clear<span class="token operator">=</span><span class="token keyword">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>可以简单地表示为如下形式</p><div class="language-lua" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> s <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>key1 <span class="token operator">=</span> value1<span class="token punctuation">,</span> key2 <span class="token operator">=</span> value2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>其中变量 <code>s</code> 存放返回的环境对象。下面将详细介绍函数的<a href="#%E5%9C%BA%E6%99%AF%E5%8F%AF%E9%80%89%E5%8F%82%E6%95%B0">可选参数</a>。</p><h2 id="场景可选参数" tabindex="-1"><a class="header-anchor" href="#场景可选参数" aria-hidden="true">#</a> 场景可选参数</h2><h3 id="参数列表" tabindex="-1"><a class="header-anchor" href="#参数列表" aria-hidden="true">#</a> 参数列表</h3><ul><li><code>grid</code>：<a href="#grid-%E5%9C%BA%E6%99%AF%E7%9A%84%E8%83%8C%E6%99%AF%E7%BD%91%E6%A0%BC">场景的背景网格</a></li><li><code>bgcolor</code>：<a href="#bgcolor-%E5%9C%BA%E6%99%AF%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2">场景背景颜色</a></li><li><code>camtype</code>：<a href="#camtype-%E6%91%84%E5%83%8F%E6%9C%BA%E8%A7%86%E8%A7%92">摄像机视角</a></li><li><code>clear</code>：<a href="#clear-%E6%98%AF%E5%90%A6%E6%B8%85%E9%99%A4%E5%9C%BA%E6%99%AF">是否清除场景</a></li><li><code>rotspeed</code> &amp; <code>transpeed</code>*：<a href="#rotspeed-transpeed">鼠标操作速度调整</a></li></ul><h3 id="grid-场景的背景网格" tabindex="-1"><a class="header-anchor" href="#grid-场景的背景网格" aria-hidden="true">#</a> <code>grid</code>：场景的背景网格</h3><p>可选值</p><table><thead><tr><th style="text-align:center;">值</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&quot;none&quot;</code></td><td>默认值，无网格</td></tr><tr><td style="text-align:center;"><code>&quot;plane&quot;</code></td><td>平地网格</td></tr><tr><td style="text-align:center;"><code>&quot;sphere&quot;</code></td><td>球形网格</td></tr></tbody></table><h3 id="bgcolor-场景背景颜色" tabindex="-1"><a class="header-anchor" href="#bgcolor-场景背景颜色" aria-hidden="true">#</a> <code>bgcolor</code>：场景背景颜色</h3><p>可选值类型</p><table><thead><tr><th style="text-align:center;">值类型</th><th>示例</th></tr></thead><tbody><tr><td style="text-align:center;">内置颜色</td><td><code>&quot;black&quot;</code>, <code>&quot;white&quot;</code>, <code>&quot;gray&quot;</code> 等</td></tr><tr><td style="text-align:center;">十六进制颜色</td><td><code>&quot;#ffffff&quot;</code>, <code>&quot;#fff&quot;</code>, <code>&quot;#000000&quot;</code>, <code>&quot;#000&quot;</code>等</td></tr><tr><td style="text-align:center;">RGB表示的颜色</td><td><code>&quot;rgb(255, 255, 255)&quot;</code>, <code>&quot;rgb(0, 0, 0)&quot;</code> 等</td></tr></tbody></table><p>实例</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>bgcolor<span class="token operator">=</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">--设置背景颜色为内置的gray</span>
scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>bgcolor<span class="token operator">=</span><span class="token string">&#39;#eee&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">--设置背景颜色为#eee</span>
scene<span class="token punctuation">.</span><span class="token function">setenv</span><span class="token punctuation">(</span><span class="token punctuation">{</span>bgcolor<span class="token operator">=</span><span class="token string">&#39;rgb(255, 255, 255)&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">--设置背景颜色为白色</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camtype-摄像机视角" tabindex="-1"><a class="header-anchor" href="#camtype-摄像机视角" aria-hidden="true">#</a> <code>camtype</code>：摄像机视角</h3><p>可选值</p><table><thead><tr><th style="text-align:center;">值</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&quot;ortho&quot;</code></td><td>正视。相当于向x和y构成的平面投影，用户视角在二维空间中。</td></tr><tr><td style="text-align:center;"><code>&quot;persp&quot;</code></td><td>透视（默认值）。用户视角在三维空间中。</td></tr></tbody></table><h3 id="clear-是否清除场景" tabindex="-1"><a class="header-anchor" href="#clear-是否清除场景" aria-hidden="true">#</a> <code>clear</code>：是否清除场景</h3><p>值设置为 <code>true</code> 时，清除场景</p><blockquote><p><code>setenv</code> 函数默认不清除原来的场景，除非手动设置参数 <code>clear</code> 的值为 <code>true</code></p></blockquote><h3 id="rotspeed-transpeed" tabindex="-1"><a class="header-anchor" href="#rotspeed-transpeed" aria-hidden="true">#</a> <code>rotspeed</code> &amp; <code>transpeed</code></h3><table><thead><tr><th style="text-align:center;">值</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>rotspeed</code></td><td>设置鼠标的旋转三维对象的速度</td></tr><tr><td style="text-align:center;"><code>transpeed</code></td><td>设置鼠标平移三位对象的速度</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这两个参数通常不需要特别设置，使用默认值即可。</p></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="有关高频率设置场景" tabindex="-1"><a class="header-anchor" href="#有关高频率设置场景" aria-hidden="true">#</a> 有关高频率设置场景</h3><p>2023/03/21：目前发现过高频次设置场景会导致内存占用过高，进而导致浏览器崩溃的问题。因此建议尽量不要循环调用 <code>scene.setenv()</code> 函数。</p><p>如果必须这么做，请确保调用频率相对较低，这样允许浏览器有一定的时间进行GC（垃圾清理），否则可能导致浏览器崩溃。</p>`,37),c=[o];function u(l,i){return a(),t("div",null,c)}const k=s(p,[["render",u],["__file","3d-scene.html.vue"]]);export{k as default};
