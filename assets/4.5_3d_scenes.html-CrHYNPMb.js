import{_ as t}from"./icon_script_editor-S0ak5iz0.js";import{_ as p,r as e,o,c,a,b as n,d as l,w as u,e as i}from"./app-iiSxc1XK.js";const r={},k=a("h1",{id:"_4-5-3d场景",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-5-3d场景"},[a("span",null,"4.5 3D场景")])],-1),d=a("strong",null,"场景",-1),g=a("strong",null,"3D物体",-1),h=a("strong",null,"项目",-1),m=a("img",{src:t,alt:"图标"},null,-1),b=a("a",{href:"icon_script_editor.png"},[a("strong",null,"ScriptEditor")],-1),_=i(`<h2 id="_3d场景和物体操作" tabindex="-1"><a class="header-anchor" href="#_3d场景和物体操作"><span>3D场景和物体操作</span></a></h2><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">CreateScene</span> <span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> RotSpeed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> TransSpeed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>创建一个新的3D场景并返回物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">AddZipTo3DPath</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> <span class="token string">&quot;文件名.zip&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>将一个zip文件添加到搜索目录中，并在成功时返回true。这对于收集大量文件很有用。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">LoadSkybox</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> <span class="token string">&quot;top.jpg&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;bottom.jpg&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;left.jpg&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;right.jpg&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;front.jpg&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;back.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>将六个图像文件加载为3D场景的天空盒。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">LoadObject</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> <span class="token string">&quot;文件名.3ds&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>shadow <span class="token operator">=</span> <span class="token keyword">false</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> AnimationSpeed<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从文件中加载一个3D物体，并返回该物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">AddLight</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> Radius <span class="token punctuation">[</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>添加一个光源物体，并返回该物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Add3DLabel</span><span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> <span class="token string">&quot;标签&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">10</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">180</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;font.xml&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在坐标(0,0,0)处添加一个3D标签，并返回该物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Add3DLine</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> z1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> z2 <span class="token punctuation">[</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从点(x1, y1, z1)到点(x2, y2, z2)添加一个3D线物体，并返回该物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Add3DRect</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> 长度<span class="token punctuation">,</span> 宽度 <span class="token punctuation">[</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从(-长度/2,0,-宽度/2)到(长度/2,0,宽度/2)添加一个3D矩形物体，并返回该物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">Add3DBox</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> 长度<span class="token punctuation">,</span> 宽度<span class="token punctuation">,</span> 高度 <span class="token punctuation">[</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">180</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> bShowEdge <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从(-长度/2,-高度/2,-宽度/2)到(长度/2,高度/2,宽度/2)添加一个3D盒子物体，并返回该物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">AddSphere</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> 半径 <span class="token punctuation">[</span><span class="token punctuation">,</span> polycount <span class="token operator">=</span> <span class="token number">16</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在坐标(0,0,0)处添加一个球体，并返回该物体。如果半径参数小于0，则返回一个不可见的物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetTexture</span> <span class="token punctuation">(</span>Object<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>返回一个物体的纹理文件：&quot;文件名1&quot;，&quot;文件名2&quot;等等。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">LoadTexture</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> Object<span class="token punctuation">,</span> <span class="token string">&quot;文件名1&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token string">&quot;文件名2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>加载纹理文件到一个物体中。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetPosition</span> <span class="token punctuation">(</span>Object<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token punctuation">[</span><span class="token punctuation">,</span> absolute <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置一个物体相对于其父物体的位置（或者绝对位置到场景）。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetPosition</span> <span class="token punctuation">(</span>Object <span class="token punctuation">[</span><span class="token punctuation">,</span> absolute <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>获取一个物体相对于其父物体的位置（或者该物体在场景中的绝对位置）。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetRotation</span> <span class="token punctuation">(</span>Object<span class="token punctuation">,</span> rx<span class="token punctuation">,</span> ry<span class="token punctuation">,</span> rz <span class="token punctuation">[</span><span class="token punctuation">,</span> absolute <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置一个物体相对于其父物体的旋转角度（左手坐标系），以度为单位（或者该物体在场景中的绝对旋转角度）。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetRotation</span> <span class="token punctuation">(</span>Object <span class="token punctuation">[</span><span class="token punctuation">,</span> absolute <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>获取一个物体相对于其父物体的旋转角度（左手坐标系），以度为单位（或者该物体在场景中的绝对旋转角度）。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetScale</span> <span class="token punctuation">(</span>Object<span class="token punctuation">,</span> sx<span class="token punctuation">,</span> sy<span class="token punctuation">,</span> sz<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置一个物体的缩放比例。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetScale</span> <span class="token punctuation">(</span>Object<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>获取一个物体的缩放比例。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetParent</span> <span class="token punctuation">(</span>Object<span class="token punctuation">,</span> Parent<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>将一个物体作为子物体附加到另一个物体上。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetParent</span> <span class="token punctuation">(</span>Object<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>获取一个物体的父物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetObject</span> <span class="token punctuation">(</span>Object <span class="token string">&quot;id&quot;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>rx<span class="token punctuation">,</span> ry<span class="token punctuation">,</span> rz <span class="token punctuation">[</span><span class="token punctuation">,</span>sx<span class="token punctuation">,</span> sy<span class="token punctuation">,</span> sz<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置一个物体的id、位置、旋转和缩放。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">DelObject</span> <span class="token punctuation">(</span>Object<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>删除一个物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetCamera</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token punctuation">[</span><span class="token punctuation">,</span>Tx<span class="token punctuation">,</span> Ty<span class="token punctuation">,</span> Tz<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置场景相机的位置和目标。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetCamera</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>获取一个3D场景的相机物体以及其位置和目标。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetSelections</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>从一个3D场景中返回选中的物体。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetObjectID</span> <span class="token punctuation">(</span>Object1 <span class="token punctuation">[</span><span class="token punctuation">,</span> Object2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>返回物体的&quot;id&quot;。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">SetObjectID</span> <span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>设置一个物体的id。</p><div class="language-lua" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="line"><span class="token function">GetObject</span> <span class="token punctuation">(</span>Scene<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>根据id查找一个物体。</p><blockquote><p>这篇文章使用ChatGPT翻译自其他语言，如果有问题请在<a href="https://github.com/huuhghhgyg/MicroCityNotes/issues/new" target="_blank" rel="noopener noreferrer"><strong>反馈</strong></a>页面提交反馈。</p></blockquote>`,58);function v(j,x){const s=e("RouteLink");return o(),c("div",null,[k,a("p",null,[d,n("和"),g,n("（"),l(s,{to:"/docs/desktop/3.4_3d_scenes.html"},{default:u(()=>[n("3.4")]),_:1}),n("）可以进行脚本编写。本章节的示例代码可以在"),h,n('标签中的"3d_samples"文件夹中的'),m,b,n("中找到。")]),_])}const y=p(r,[["render",v],["__file","4.5_3d_scenes.html.vue"]]),S=JSON.parse('{"path":"/docs/desktop/4.5_3d_scenes.html","title":"4.5 3D场景","lang":"zh-CN","frontmatter":{"prev":"./4.4_grids.md","next":"./4.6_networks.md","description":"4.5 3D场景 场景和3D物体（）可以进行脚本编写。本章节的示例代码可以在项目标签中的\\"3d_samples\\"文件夹中的图标ScriptEditor中找到。 3D场景和物体操作 创建一个新的3D场景并返回物体。 将一个zip文件添加到搜索目录中，并在成功时返回true。这对于收集大量文件很有用。 将六个图像文件加载为3D场景的天空盒。 从文件中加载一...","head":[["meta",{"property":"og:url","content":"https://huuhghhgyg.github.io/MicroCityNotes/docs/desktop/4.5_3d_scenes.html"}],["meta",{"property":"og:site_name","content":"MicroCity笔记"}],["meta",{"property":"og:title","content":"4.5 3D场景"}],["meta",{"property":"og:description","content":"4.5 3D场景 场景和3D物体（）可以进行脚本编写。本章节的示例代码可以在项目标签中的\\"3d_samples\\"文件夹中的图标ScriptEditor中找到。 3D场景和物体操作 创建一个新的3D场景并返回物体。 将一个zip文件添加到搜索目录中，并在成功时返回true。这对于收集大量文件很有用。 将六个图像文件加载为3D场景的天空盒。 从文件中加载一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T05:56:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-19T05:56:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.5 3D场景\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T05:56:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"3D场景和物体操作","slug":"_3d场景和物体操作","link":"#_3d场景和物体操作","children":[]}],"git":{"updatedTime":1710827784000,"contributors":[{"name":"huuhghhgyg","email":"huuhghhgyg@outlook.com","commits":2}]},"filePathRelative":"docs/desktop/4.5_3d_scenes.md","autoDesc":true,"excerpt":"\\n<p><strong>场景</strong>和<strong>3D物体</strong>（<a href=\\"/MicroCityNotes/docs/desktop/3.4_3d_scenes.html\\" target=\\"_blank\\">3.4</a>）可以进行脚本编写。本章节的示例代码可以在<strong>项目</strong>标签中的\\"3d_samples\\"文件夹中的<a href=\\"icon_script_editor.png\\"><strong>ScriptEditor</strong></a>中找到。</p>\\n<h2>3D场景和物体操作</h2>\\n<div class=\\"language-lua\\" data-highlighter=\\"prismjs\\" data-ext=\\"lua\\" data-title=\\"lua\\"><pre class=\\"language-lua\\"><code><span class=\\"line\\"><span class=\\"token function\\">CreateScene</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"标题\\"</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">,</span> RotSpeed<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">,</span> TransSpeed<span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre></div>"}');export{y as comp,S as data};
